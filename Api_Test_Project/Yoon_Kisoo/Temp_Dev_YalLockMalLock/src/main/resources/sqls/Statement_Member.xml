<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

<!--  회원가입 (임시 : id_num 가져올수 없어서 테스트용으로 씀) -->
<insert id="insertMember" parameterType="com.dev2.ylml.dto.MemberDto">
INSERT INTO MEMBER(ID_NUM, EMAIL, PW, NAME, PHONE_NUM)
VALUES ('112512525', #{email}, #{pw}, #{name},#{phone_num})
</insert>

<!-- 회원가입 (자동으로 id_num 가져 올때 -->
<!-- <insert id="insertMember" parameterType="com.dev2.ylml.dto.MemberDto"> -->
<!-- INSERT INTO MEMBER(ID_NUM, EMAIL, PW, NAME, PHONE_NUM) -->
<!-- VALUES ('#{id_num}',#{email}, #{pw}, #{name},#{phone_num}) -->
<!-- </insert> -->

<!-- 권한변경 -->
<update id="authUpdate" parameterType="com.dev2.ylml.dto.MemberDto">
UPDATE MEMBER SET
AUTH = #{auth}
WHERE EMAIL = #{email}
</update>

<!-- 아이디 중복검사 -->
<select id="idCheck" parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT COUNT(EMAIL) EMAIL
FROM MEMBER
WHERE EMAIL = #{email}
</select>

<!-- 핸드폰 번호 중복검사 -->
<select id="phoneCheck" parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT COUNT(PHONE_NUM) PHONE_NUM
FROM MEMBER
WHERE PHONE_NUM = #{phone_num}
</select>


<!-- 암호화 로그인 -->
<select id="enLogin" parameterType="java.util.Map" resultType="com.dev2.ylml.dto.MemberDto">
SELECT EMAIL, NAME, AUTH, PHONE_NUM, REG_DATE
FROM MEMBER
WHERE EMAIL = #{email}
AND AUTH IN ('10','19')
AND DEL_FLAG = 'N'
</select>

<!-- 아이디로 암호화 된 비밀번호 찾기 -->
<select id="enPw" parameterType="java.lang.String" resultType="java.lang.String">
SELECT PW
FROM MEMBER
WHERE EMAIL = #{email}
</select>

<!-- 아이디 찾기 -->
<select id="IdSearch" parameterType="java.util.Map" resultType="java.lang.String">
SELECT EMAIL 
FROM MEMBER
WHERE NAME = #{name}
AND PHONE_NUM = #{phone_num}
</select>

<!-- 개인정보 변경(휴대폰 변경이지만 후에 추가 될 수 있으므로 DTO로 처리함) -->
<update id="updateInfo" parameterType="java.util.Map">
UPDATE MEMBER SET 
PHONE_NUM = #{phone_num}
WHERE EMAIL= #{email}
</update>

<!-- 비밀번호 변경 -->
<update id="updatePw" parameterType="com.dev2.ylml.dto.MemberDto">
UPDATE MEMBER SET 
PW = #{pw}
WHERE EMAIL= #{email}
</update>

<select id="usingCheck" parameterType="java.util.Map" resultType="java.lang.Integer">
SELECT COUNT (M.EMAIL)
FROM STORAGE_GOODS G, MEMBER M
WHERE (G.IN_USER = M.EMAIL OR G.OUT_USER = M.EMAIL) AND M.EMAIL = #{email}
</select>

<update id="quitMember" parameterType="java.lang.String">
UPDATE MEMBER SET 
DEL_FLAG = 'Y',
LEV_DATE = SYSDATE
WHERE EMAIL = #{email}
</update>
</mapper>