<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

	<!-- 회원가입 (임시 : id_num 가져올수 없어서 테스트용으로 씀) -->
	<insert id="insertMember" parameterType="MemberDto">
		INSERT INTO MEMBER(ID_NUM, EMAIL, PW, NAME, PHONE_NUM, AUTH)
		VALUES (#{idNum}, #{email}, #{pw}, #{name},#{phoneNum}, #{auth})
	</insert>

	<!-- 회원가입 (자동으로 id_num 가져 올때 -->
	<!-- <insert id="insertMember" parameterType="com.dev2.ylml.dto.MemberDto"> -->
	<!-- INSERT INTO MEMBER(ID_NUM, EMAIL, PW, NAME, PHONE_NUM, AUTH) -->
	<!-- VALUES ('#{id_num}',#{email}, #{pw}, #{name},#{phone_num}, #{auth}) -->
	<!-- </insert> -->

	<!-- 권한변경 -->
	<update id="authUpdate" parameterType="MemberDto">
		UPDATE MEMBER SET
		AUTH = #{auth}
		WHERE EMAIL = #{email}
	</update>

	<!-- 아이디 중복검사 -->
	<select id="idCheck" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT COUNT(EMAIL) EMAIL
		FROM MEMBER
		WHERE EMAIL = #{email}
	</select>

	<!-- 핸드폰 번호 중복검사 -->
	<select id="phoneCheck" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT COUNT(PHONE_NUM) PHONE_NUM
		FROM MEMBER
		WHERE PHONE_NUM = #{phoneNum}
	</select>


	<!-- 암호화 일반 로그인 -->
	<select id="enLogin" parameterType="java.util.Map"
		resultType="MemberDto">
		SELECT EMAIL, NAME, AUTH, PHONE_NUM, REG_DATE
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND AUTH IN (10,19)
		AND DEL_FLAG = 'N'
	</select>
	<!-- 암호화 배송원 로그인 -->
	<select id="enDelLogin" parameterType="java.util.Map"
		resultType="MemberDto">
		SELECT EMAIL, NAME, AUTH, PHONE_NUM, REG_DATE
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND AUTH IN (80,89)
		AND DEL_FLAG = 'N'
	</select>
	<!-- 암호화 담당자 및 관리자 로그인 -->
	<select id="enAdminLogin" parameterType="java.util.Map"
		resultType="MemberDto">
		SELECT EMAIL, NAME, AUTH, PHONE_NUM, REG_DATE
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND AUTH IN (100,90,99)
		AND DEL_FLAG = 'N'
	</select>

	<!-- 아이디로 암호화 된 비밀번호 찾기 -->
	<select id="enPw" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT PW
		FROM MEMBER
		WHERE EMAIL = #{email}
	</select>

	<!-- 아이디 찾기 -->
	<select id="IdSearch" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT EMAIL
		FROM MEMBER
		WHERE NAME = #{name}
		AND PHONE_NUM = #{phoneNum}
	</select>
	<!-- -->
	<select id="pwSearch" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(EMAIL)
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND NAME = #{name}
	</select>

	<!-- 개인정보 변경(휴대폰 변경이지만 후에 추가 될 수 있으므로 DTO로 처리함) -->
	<update id="updateInfo" parameterType="java.util.Map">
		UPDATE MEMBER SET
		PHONE_NUM = #{phoneNum}
		WHERE EMAIL= #{email}
	</update>

	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="MemberDto">
		UPDATE MEMBER SET
		PW = #{pw}
		WHERE EMAIL= #{email}
	</update>

	<select id="usingCheck" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT (M.EMAIL)
		FROM STORAGE_GOODS G, MEMBER M
		WHERE (G.IN_USER = M.EMAIL OR G.OUT_USER = M.EMAIL) AND M.EMAIL = #{email}
	</select>

	<!-- 회원탈퇴 -->
	<update id="quitMember" parameterType="java.lang.String">
		UPDATE MEMBER SET
		DEL_FLAG = 'Y',
		LEV_DATE = SYSDATE
		WHERE EMAIL = #{email}
	</update>
	<!-- 회원전체조회 -->
	<select id="selectAll" parameterType="java.util.Map" resultType="MemberDto">
		SELECT EMAIL, NAME, PHONE_NUM, AUTH,
		TO_CHAR(reg_Date,'yyyy-mm-dd hh24:mi:ss') as reg_date,
		TO_CHAR(LEV_DATE,'yyyy-mm-dd hh24:mi:ss') as LEV_DATE, DEL_FLAG  
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
						SELECT * FROM MEMBER m
						where AUTH IN (10,19)
						<if test="email != null">
							AND EMAIL LIKE '%'||#{email}||'%'
						</if>
						ORDER BY REG_DATE DESC
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="countMember" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER where AUTH IN (10,19)
			<if test="email != null">
				AND EMAIL LIKE '%'||#{email}||'%'
			</if>
	</select>
	<!-- 회원 아이디로 상세정보 검색 -->
	<select id="memberIdSearch" resultType="java.lang.String">
		SELECT EMAIL FROM member
		where AUTH IN (10,19)
	</select>
	<!-- 회원 상세정보(아이디, 이름, 핸드폰번호, 등록일, 탈퇴일, 삭제여부, 사용중인 서비스) -->
	<select id="detailMember" parameterType="java.lang.String"
		resultType="MemberDto">
		SELECT EMAIL,NAME ,PHONE_NUM ,AUTH ,
		TO_CHAR(reg_Date,'yyyy-mm-dd hh24:mi:ss') as REG_DATE ,
		TO_CHAR(LEV_DATE,'yyyy-mm-dd hh24:mi:ss') as LEV_DATE ,DEL_FLAG FROM
		member where email=#{email}
	</select>
	<!-- 회원 사용중인 서비스 -->
	<select id="memberUsing" parameterType="java.lang.String"
		resultType="StorageGoodsDto">
		SELECT BOX_SEQ ,IN_USER, OUT_USER,
		(SELECT STORAGE_NAME FROM
		STORAGEBOX_LIST WHERE STORAGE_ID=sg.STORAGE_ID) AS STORAGE_ID ,
		TO_CHAR(IN_TIME,'yyyy-mm-dd hh24:mi:ss') as IN_TIME ,
		TO_CHAR(EX_TIME,'yyyy-mm-dd hh24:mi:ss') as EX_TIME ,
		(SELECT cost FROM
		cost WHERE COST_CODE=sg.COST_CODE) as cost
		FROM STORAGE_GOODS sg WHERE
		OUT_USER =#{email} OR IN_USER =#{email}
	</select>
</mapper>